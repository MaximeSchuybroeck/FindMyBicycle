// Generated by view binder compiler. Do not edit!
package java.be.kuleuven.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.be.kuleuven.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityBikeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addLocation;

  @NonNull
  public final Button button;

  @NonNull
  public final TextView colorBanner;

  @NonNull
  public final Button editBicycle;

  @NonNull
  public final TextView textView3;

  private ActivityBikeBinding(@NonNull ConstraintLayout rootView, @NonNull Button addLocation,
      @NonNull Button button, @NonNull TextView colorBanner, @NonNull Button editBicycle,
      @NonNull TextView textView3) {
    this.rootView = rootView;
    this.addLocation = addLocation;
    this.button = button;
    this.colorBanner = colorBanner;
    this.editBicycle = editBicycle;
    this.textView3 = textView3;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityBikeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityBikeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_bike, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityBikeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addLocation;
      Button addLocation = ViewBindings.findChildViewById(rootView, id);
      if (addLocation == null) {
        break missingId;
      }

      id = R.id.button;
      Button button = ViewBindings.findChildViewById(rootView, id);
      if (button == null) {
        break missingId;
      }

      id = R.id.colorBanner;
      TextView colorBanner = ViewBindings.findChildViewById(rootView, id);
      if (colorBanner == null) {
        break missingId;
      }

      id = R.id.editBicycle;
      Button editBicycle = ViewBindings.findChildViewById(rootView, id);
      if (editBicycle == null) {
        break missingId;
      }

      id = R.id.textView3;
      TextView textView3 = ViewBindings.findChildViewById(rootView, id);
      if (textView3 == null) {
        break missingId;
      }

      return new ActivityBikeBinding((ConstraintLayout) rootView, addLocation, button, colorBanner,
          editBicycle, textView3);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
